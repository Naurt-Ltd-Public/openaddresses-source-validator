name: OA source validator

on:
  workflow_dispatch:
    inputs:
      root_directory:
        description: 'Directory to process. Example: ./openaddresses/sources/us/va/'
        required: true
        default: './test'  # Default directory
      publish_results:
        description: 'Publish results and update gh-pages branch'
        required: true
        default: false
        type: boolean

jobs:
  run-script:
    runs-on: ubuntu-latest

    permissions:
      contents: write  

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false 

      - name: Checkout the external repository
        uses: actions/checkout@v4
        with:
          repository: openaddresses/openaddresses
          path: openaddresses
          persist-credentials: false 

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install -r src/requirements.txt

      - name: Run the Python script
        env:
          ROOT_DIRECTORY: ${{ github.event.inputs.root_directory }}
        run: python src/main.py 

      - name: Check for log content
        id: check_logs
        run: |
          if grep -q '[^[:space:]]' out/broken_links.log; then
            echo "LOGS_EXIST=true" >> $GITHUB_ENV
          else
            echo "LOGS_EXIST=false" >> $GITHUB_ENV
          fi

      - name: Upload logs as artifacts
        if: env.LOGS_EXIST == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: out/*

      - name: Handle badges and commit (if publishing and logs exist)
        if: ${{ github.event.inputs.publish_results == 'true' && env.LOGS_EXIST == 'true' }}
        run: |
          # Upload badges as artifacts
          echo "Uploading badges as artifacts..."
          actions/upload-artifact@v4 --name badges --path ./badges/
          
          # Set up Git credentials
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

          # Generate badges.json
          echo "[" > badges.json
          for badge in ./badges/*.md; do
            basename "$badge" | jq -R . >> badges.json
          done
          sed -i '$ s/,$//' badges.json
          echo "]" >> badges.json
          
          # Move badges.json to badges directory
          mv badges.json badges/badges.json

          # Commit and push badges to gh-pages branch
          git checkout -B gh-pages
          git add badges
          git commit -m "Update badges"
          git push -f origin gh-pages
        shell: bash
